name: 🤖 Automated PrisMind Collection

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:

jobs:
  collect-reddit-saved:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🔍 Run Reddit collector
      id: collector
      env:
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT || 'prismind/1.0' }}
        REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
        REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
      run: |
        # Create required directories
        mkdir -p data logs
        
        # Run the collector and capture output
        OUTPUT=$(python scripts/scheduled_reddit_collector.py --limit 50 2>&1)
        EXIT_CODE=$?
        
        # Save output to file for notification
        echo "$OUTPUT" > collection_output.txt
        
        # Set job outputs based on results
        if [ $EXIT_CODE -eq 0 ]; then
          NEW_POSTS=$(echo "$OUTPUT" | grep -oP "New posts found:\s+\K\d+" || echo "0")
          echo "NEW_POSTS=$NEW_POSTS" >> $GITHUB_OUTPUT
          echo "STATUS=success" >> $GITHUB_OUTPUT
        else
          echo "NEW_POSTS=0" >> $GITHUB_OUTPUT
          echo "STATUS=failed" >> $GITHUB_OUTPUT
        fi
        
        # Exit with original status code
        exit $EXIT_CODE
    
    - name: 📱 Send Telegram notification
      if: always()
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        # Read collection output
        OUTPUT=$(cat collection_output.txt)
        
        # Get run URL for direct link to logs
        RUN_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
        
        # Format message based on status
        if [ "${{ steps.collector.outputs.STATUS }}" = "success" ]; then
          NEW_POSTS=${{ steps.collector.outputs.NEW_POSTS || '0' }}
          if [ "$NEW_POSTS" -gt 0 ]; then
            # Extract post titles from the output
            POST_TITLES=$(echo "$OUTPUT" | grep -oP 'Title=\K[^,]*' | head -5 | sed 's/^/• /')
            EMOJI="📥"
            MESSAGE="✅ *$NEW_POSTS New Post(s) Collected*\n\n$POST_TITLES"
            if [ "$NEW_POSTS" -gt 5 ]; then
              MESSAGE="$MESSAGE\n\n+$(($NEW_POSTS - 5)) more posts..."
            fi
          else
            EMOJI="ℹ️"
            MESSAGE="ℹ️ No new posts found on Reddit"
          fi
        else
          EMOJI="❌"
          MESSAGE="❌ *Collection Failed*\n\nCheck the logs for details"
        fi
        
        # Get the current time in a nice format
        CURRENT_TIME=$(date '+%Y-%m-%d %H:%M:%S %Z')
        
        # Format the final message with a clean header and footer
        FINAL_MESSAGE="$EMOJI *Reddit Collection Report*\n*$CURRENT_TIME*\n\n$MESSAGE\n\n[View Run]($RUN_URL)"
        
        # Escape special characters for JSON
        ESCAPED_MESSAGE=$(echo -e "$FINAL_MESSAGE" | python3 -c 'import json,sys; print(json.dumps(sys.stdin.read()))')
        
        # Send the notification
        curl -s -X POST \
          -H "Content-Type: application/json" \
          -d "{\"chat_id\": \"$TELEGRAM_CHAT_ID\", \"text\": $ESCAPED_MESSAGE, \"parse_mode\": \"Markdown\", \"disable_web_page_preview\": true}" \
          https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage > /dev/null
        "