name: ü§ñ Automated PrisMind Collection

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  automated-collection:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: üîÑ Checkout Repository
      uses: actions/checkout@v4
    
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: üì¶ Install Dependencies
      run: |
        pip install -r requirements.txt
        playwright install chromium
        playwright install-deps chromium
    
    - name: üóùÔ∏è Prepare Cookies
      run: |
        mkdir -p cookies
        echo "${{ secrets.REDDIT_COOKIES_JSON }}" > cookies/reddit.json
        echo "${{ secrets.TWITTER_COOKIES_JSON }}" > cookies/twitter.json
    
    - name: ü§ñ Run Collection
      env:
        REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        python scripts/cookie_collectors.py
    
    - name: üì± Send Notification
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        python -c "
        import requests
        import os
        import json
        
        bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
        chat_id = os.getenv('TELEGRAM_CHAT_ID')
        
        message = 'ü§ñ Automated PrisMind Collection Complete!\n\nCheck your dashboard for new bookmarks.'
        
        url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
        data = {'chat_id': chat_id, 'text': message}
        
        response = requests.post(url, data=data)
        if response.status_code == 200:
            print('‚úÖ Telegram notification sent!')
        else:
            print(f'‚ùå Failed to send notification: {response.status_code}')
            print(response.text)
        "